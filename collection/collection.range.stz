public
// ---

import: 'core/sequenceable'

{ range | start: $T, stop: $T }

/* creation */
[ start to: stop | $T, $T -> range of: $T | { start: start, stop: stop } ]

/* iteration */
[ range do: block | range of: $T, $B |
  assert: start ≤ stop
  start to: stop do: block ]

[ range reverse-do: block | range of: $T, $B |
  assert: start ≤ stop
  stop to: start reverse-do: block ]


private
// ----

/* iteration */
[ start to: stop do: block | $T, $T, $B |
  block evaluate: start
  start == stop else: [ start + 1 to: stop do: block ] ]

[ start to: stop reverse-do: block | $T, $T, $B |
  block evaluate: stop
  start == stop else: [ start to: stop - 1 do: block ] ]
